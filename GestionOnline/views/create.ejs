<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <script src="js/funciones.js"></script>
    <title>Crud</title>


</head>
<body>


    <nav  class="navbar navbar-expand-lg navbar-dark bg-primary">
        <div class="container-fluid">
        <a class="navbar-brand" href="#">REGISTRO DE PRODUCTOS</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
        
            </ul>
            <form class="d-flex">
            <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
            <button class="btn btn-outline-success" type="submit">Search</button>
            </form>
        </div>
        </div>
    </nav>






    <div class="container"><br><br>
    
        <div class="row justify-content-center">          
            <div class="col-md-6 border p-4">            <!--Tambien express contiene middleware  configurado para manejar solicitud POST-->
                <form action="/save" method="POST">      <!-- configurado para enviar una solicitud POST a la ruta /save Uso de ApiRest-->
    
                    <div class="mb-3">
                        <label for="nombre" class="form-label">Nombre:</label>
                        <input type="text" class="form-control" id="nombre" name="nombre">
                    </div>
    
                    <div class="mb-3">
                        <label for="descripcion" class="form-label">Descripción:</label>
                        <input type="text" class="form-control" id="descripcion" name="descripcion">
                    </div>
    
                    <div class="mb-3">
                        <label for="precio" class="form-label">Precio:</label>
                        <input type="text" class="form-control" id="precio" name="precio">
                    </div>
    
                    <div class="mb-3">
                        <label for="stock" class="form-label">Stock:</label>
                        <input type="text" class="form-control" id="stock" name="stock">
                    </div>
    
                    <button type="submit" class="btn btn-primary">Guardar</button>
                    <a href="/" class="btn btn-secondary">Cancelar</a>
    
                </form>
            </div>
        </div>
    </div>
    


    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script> 





    <script>
        function initializeWebSocket() {
            const ws = new WebSocket('ws://localhost:5001');
            const messageContainer = document.getElementById('messageContainer');

            ws.onopen = function () {
                console.log('Conexión establecida.');
                appendMessage('Conexión establecida.');
            };

            ws.onmessage = function (event) {
                console.log('Mensaje recibido del servidor: ', event.data);
                appendMessage('Servidor: ' + event.data);
            };

            ws.onerror = function (error) {
                console.error('Error de WebSocket: ', error); 
                appendMessage('Error de WebSocket: ' + error.message);
            };

            function sendMessage() {
                const messageInput = document.getElementById('messageInput');
                const message = messageInput.value;
                ws.send(message);
                messageInput.value = '';
                appendMessage('Cliente: ' + message);
            }

            function appendMessage(message) {
                const messageElement = document.createElement('div');
                messageElement.innerText = message;
                messageContainer.appendChild(messageElement);   
            }
        }

        // Llamar a la función para inicializar WebSocket cuando la página se cargue
        window.onload = initializeWebSocket;




 //Preparar la cookie 
                                                         // Comprobación de cookie al cargar la página
    window.onload = function() {
            checkCookie();
        };

                                                         // Función para comprobar si existe la cookie
        function checkCookie() {
            if (document.cookie.indexOf("miCookie") >= 0) {
                alert("¡PAGINA PARA AGREGAR REGISTROS!");
            }
        }

        
        
        document.cookie = "miCookie=valorCookie; expires=Thu, 01 Jan 2026 00:00:00 UTC; path=/";   //cookie lista para usar 






    </script>








</body>
</html>